version: '3.7'

services:
  db:
    image: mysql:latest
    container_name: chat_app_db
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./rails-app/db/data:/var/lib/mysql
    ports:
      - "3307:3306"

  redis:
    image: redis:latest
    container_name: chat_app_redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: chat_app_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3


  web:
    build: ./rails-app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"
    env_file:
      - .env
    volumes:
      - ./rails-app:/rails-app
      - ./rails-app/tmp/pids:/rails-app/tmp/pids
      - ./rails-app/tmp/cache:/rails-app/tmp/cache
      - ./rails-app/log:/rails-app/log
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"
    working_dir: /rails-app

  go-chat:
    build:
      context: ./go-chat-app
      dockerfile: Dockerfile
    command: ["go", "run", "main.go"]
    env_file:
    - .env
    volumes:
    - ./go-chat-app:/app
    depends_on:
      - db
    ports:
      - "8080:8080"